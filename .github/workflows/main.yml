on:
  pull_request_target:
    branches:
      - main

jobs:
  Coverage:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14.3-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: database
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

      mongo:
        image: mongo:5.0.4
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.runCommand({ connectionStatus: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Verify git repository
        uses: actions/checkout@v3

      - name: Install node on version
        uses: actions/setup-node@v1
        with:
          node-version: 16

      # - name: Cache node_modules
      #   id: coverage-cache
      #   uses: actions/cache@v2
      #   env:
      #     cache-name: cache-node-modules
      #   with:
      #     path: ~/.npm
      #     key: ${{ runner.os }}-coverage-cache--build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-
      #       ${{ runner.os }}-build-
      #       ${{ runner.os }}-

      - name: Install dependencies
        # if: steps.coverage-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Migrate database
        run: npx prisma migrate dev
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/database
          MONGO_URI: mongodb://localhost:27017/database

      - name: Run tests and generate coverage
        run: npm run test:cov
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/database
          MONGO_URI: mongodb://localhost:27017/database

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
